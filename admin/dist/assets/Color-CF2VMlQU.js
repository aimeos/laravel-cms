import{l as O,p as S,u as q,m as A,s as D,n as P,q as j,v as V,x as K,y as R,z as T,A as $,B as k,C as I,D as F,a as d,F as _,i as z,E as v,G,_ as N,b as H,r as J,o as L}from"../index.js";const Q=S({pip:Boolean,pipIcon:{type:String,default:"$color"},...T(),...R(),...K(),...V($(),["width"])},"VColorInput"),W=O()({name:"VColorInput",props:Q(),emits:{"update:modelValue":e=>!0},setup(e,s){let{slots:a}=s;const{isFocused:c,focus:y,blur:p}=q(e),l=A(e,"modelValue"),o=D(!1),i=P(()=>!e.disabled&&!e.readonly),b=P(()=>l.value||null);function g(t){if(t.key!=="Enter")return;if(!o.value||!c.value){o.value=!0;return}const f=t.target;l.value=f.value}function m(t){t.preventDefault(),t.stopPropagation(),o.value=!0}function x(){o.value=!1}j(()=>{const t=k.filterProps(e),f=I.filterProps(V(e,["active","color"])),h=F.filterProps(V(e,["prependInnerIcon"])),w=!!(a.prepend||e.pipIcon);return d(F,v(h,{class:["v-color-input",e.class],style:e.style,modelValue:b.value,onKeydown:i.value?g:void 0,focused:o.value||c.value,onFocus:y,onBlur:p,"onClick:control":i.value?m:void 0,"onClick:prependInner":i.value?m:void 0,"onClick:appendInner":i.value?m:void 0,"onUpdate:modelValue":r=>{l.value=r}}),{...a,prepend:e.pipIcon?r=>{var n;return d(_,null,[w&&d(z,{color:e.pip?l.value:void 0,icon:e.pipIcon},null),(n=a.prepend)==null?void 0:n.call(a,r)])}:void 0,default:()=>{var r;return d(_,null,[d(G,{modelValue:o.value,"onUpdate:modelValue":n=>o.value=n,activator:"parent","min-width":"0",closeOnContentClick:!1,openOnClick:!1},{default:()=>[d(k,v(t,{modelValue:l.value,"onUpdate:modelValue":n=>l.value=n,onSave:x}),{default:n=>{let{actions:B,model:C,save:E,cancel:U,isPristine:M}=n;return d(I,v(f,{modelValue:C.value,"onUpdate:modelValue":u=>{C.value=u,l.value=u},onMousedown:u=>u.preventDefault()}),{actions:e.hideActions?void 0:()=>{var u;return((u=a.actions)==null?void 0:u.call(a,{save:E,cancel:U,isPristine:M}))??B()}})}})]}),(r=a.default)==null?void 0:r.call(a)])}})})}}),X={components:{VColorInput:W},props:{modelValue:{type:String,default:""},config:{type:Object,default:()=>{}},assets:{type:Object,default:()=>{}},readonly:{type:Boolean,default:!1}},emits:["update:modelValue","error"],methods:{update(e){this.$emit("update:modelValue",e)},async validate(){return await!0}}};function Y(e,s,a,c,y,p){const l=J("v-color-input");return L(),H(l,{rules:[o=>!a.config.required||!!o||"Value is required",o=>!o||/^#[0-9A-F]{6,8}$/i.test(o)||"Value must be a hex color code"],clearable:!a.readonly,disabled:a.readonly,modelValue:a.modelValue,"onUpdate:modelValue":s[0]||(s[0]=o=>p.update(o))},null,8,["rules","clearable","disabled","modelValue"])}const ee=N(X,[["render",Y]]);export{ee as default};
