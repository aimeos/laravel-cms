import{_ as d,b as o,D as i,o as n}from"../index.js";const s={props:{modelValue:{type:String,default:""},config:{type:Object,default:()=>{}},readonly:{type:Boolean,default:!1}},emits:["update:modelValue","error"],methods:{check(e){const t=this.config.allowed||["http","https"];return t.every(a=>/^[a-z]+/.test(a))?e?new RegExp(`^(${t.join("|")})://([^\\s/:@]+(:[^\\s/:@]+)?@)?([0-9a-z]+(\\.|-))*[0-9a-z]+\\.[a-z]{2,}(:[0-9]{1,5})?(/[^\\s]*)*$`).test(e):!0:"Invalid URL schema configuration"},update(e){this.$emit("update:modelValue",e),this.validate()},async validate(){await this.$nextTick();const e=await this.$refs.field.validate();return this.$emit("error",e.length>0),!e.length}},watch:{modelValue:{immediate:!0,handler(e){this.validate()}}}};function u(e,t,a,c,f,r){return n(),o(i,{ref:"field",placeholder:a.config.placeholder||"",rules:[l=>!a.config.required||!!l||"Value is required",l=>r.check(l)||"Not a valid URL"],readonly:a.readonly,modelValue:a.modelValue,"onUpdate:modelValue":t[0]||(t[0]=l=>r.update(l)),density:"comfortable","hide-details":"auto",variant:"outlined",clearable:""},null,8,["placeholder","rules","readonly","modelValue"])}const m=d(s,[["render",u]]);export{m as default};
